[concatMap' (\c -> [c, c]) "Hello" == "HHeelllloo",
concatMap' (\x -> [x, x + 10]) [1, 2, 4] == [1, 11, 2, 12, 4, 14],
concatMap' (\n -> replicate n n) [2, 1, 3] == [2, 2, 1, 3, 3, 3],
concatMap' (\x -> [x]) [] == [],
intersperse' ',' "abcde" == "a,b,c,d,e",
intersperse' 1 [3, 4, 5] == [3,1,4,1,5],
intersperse' 3 [] == [],
dropWhileEnd' (== ' ') "Hello world   " == "Hello world",
dropWhileEnd' (< 0) [1, -2, 3, 0, -1, -4] == [1, -2, 3, 0],
dropWhileEnd' (\_ -> True) [1, 2, 3] == [],
dropWhileEnd' (\_ -> False) [] == [],
nestedMap (+ 1) [[1, 2], [], [3]] == [[2, 3], [], [4]],
nestedMap (== 'l') ["he", "llo"] == [[False, False], [True, True, False]],
nestedMap (+ 1) [] == [],
nestedMap (+ 1) [[], [], []] == [[], [], []],
lookups "Bob" [("Alice", 4), ("Bob", 5), ("Bob", 3)] == [5, 3],
lookups 0 [(3, 'a'), (0, 'b'), (0, 'c'), (2, 'd'), (0, 'e')] == "bce",
lookups 0 [(1, True), (2, False)] == [],
lookups 3 [] == [],
findIndices' (== 'l') "Hello world" == [2, 3, 9],
findIndices' (< 0) [-1, 0, 1, -2, 3] == [0, 3],
findIndices' (< 0) [1, 2, 3] == [],
findIndices' (\_ -> True) [] == []]]
